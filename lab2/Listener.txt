
CL-USER 1 > 

(defun initknightsTourstate(m n x y) 
;"Define a new visited state with initial x,y visited and rest all unvisited"
  (if (eql m n)
    (progn
    (setf visited (make-array (list m n) :initial-element 0))
    (visitTile x y visited))))
INITKNIGHTSTOURSTATE

CL-USER 2 > 
(defun knightsTour-goalstate (m n)
  (setf *allvisited* (make-array (list m n) :initial-element 1)))
KNIGHTSTOUR-GOALSTATE

CL-USER 3 > 

;;;;Modifying State

(defun visitTile(x y visited)
  (if (= (aref visited x y) 0) (progn (setf (aref visited x y) 1) (push (cons x y) seq))))
VISITTILE

CL-USER 4 > 
(defun checkifVisited(x y visited)
  (if (= (aref visited x y) 1) 1
  0))
CHECKIFVISITED

CL-USER 5 > 


;;;;Printing State

(defun printState (visited &optional (stream t))
  (dotimes (i (array-total-size visited))
     (if (= (mod i (array-dimension visited 0)) 0) (format t "~C" #\linefeed))
     (if (= (checkifVisited (mod i (array-dimension visited 0)) (floor (/ i (array-dimension visited 1))) visited) 1) (prin1 'X )
       (prin1 'O)))
       (values))
PRINTSTATE

CL-USER 6 > 

;;;; Defining Problems



(defun knightstour-legalmoves(x y visited) 
; "Get legal moves from current node (x y) and state visited"
  (setf moves (list  '(-1 2) '(-1 -2) '(2 -1) '(2 1) 
                     '(1 2) '(1 -2) '(-2 1) '(-2 -1))) 
  (setf results (make-array '(8 2)))
  (setq n 0)
 
   (dolist(move moves results)
        (setf x1 (+ x (car move)))
        (setf y1 (+ y (cadr move)))
        (if (and (<= (+ 1 x1) (array-dimension visited 0)) (>= x1 0) (<= (+ 1 y1) (array-dimension visited 1)) (>= y1 0)) 
          (if (= (checkifVisited x1 y1 visited) 0) 
            (progn 
              (setf (aref results n 0) x1) 
              (setf (aref results n 1) y1) 
              (incf n)) ))))
KNIGHTSTOUR-LEGALMOVES

CL-USER 7 > 

(defun goal-reached (visited) 
  (if (equalp visited *allvisited*) 1 
  0))
GOAL-REACHED

CL-USER 8 > 


(defun backtrack(x y visited)
   (if (= (aref visited x y) 1) (setf (aref visited x y) 0))  
   (pop seq)
  ; get current (length seq)-> check if this length exists for x y => yes:backtrack again no:add it to count for that x y 
  
   (setf newbt (+ 1 (aref btcount (caar seq) (cdar seq))))  
   (setf (aref btcount (caar seq) (cdar seq)) newbt) 
   (expand (caar seq) (cdar seq) newbt))
BACKTRACK

CL-USER 9 > 


(defun expand(x y &optional (i 0))
  (setf k (knightstour-legalmoves x y visited))
  (print (reverse seq))
  (print (length seq))
  (cond ((aref k i 0)
    (progn
        (if (aref k i 0)
          (progn          
          (visitTile (aref k i 0) (aref k i 1) visited)
          (setf (aref btcount (aref k i 0) (aref k i 1)) 0) 
          (expand (aref k i 0) (aref k i 1))))))
    ((eql (goal-reached visited) 0) 
     (backtrack x y visited))
    ((eql (goal-reached visited) 1)
     (print (reverse seq)))))
EXPAND

CL-USER 10 > 
(defun knights-tour-backtracking (x y m n)
  (setf seq nil)
  (setf btcount (make-array (list m n) :initial-element nil))
  (initknightsTourstate m n x y)
  (knightsTour-goalstate m n)
  (expand x y))
KNIGHTS-TOUR-BACKTRACKING

CL-USER 11 > 


(defun expandWarnsdorff(x y visited)
  (setf k (knightstour-legalmoves x y visited))
  (setf min 8)
  (dotimes (l 8)
    (setf count 0) 
    (if (aref k l 0)
      (progn    
      (setf moves (knightstour-legalmoves (aref k l 0) (aref k l 1) visited))
      (dotimes (j 8)
        (if (aref moves j 0) 
          (incf count)))
      (if (< count min) (progn (setf min count) (setf i l))))))

   (cond ((eql (goal-reached visited) 0)
     (progn  
     (visitTile (aref k i 0) (aref k i 1) visited)
     (expandWarnsdorff (aref k i 0) (aref k i 1) visited)))
    ((eql (goal-reached visited) 1)
     (progn (let ((*print-length* nil))
     (print (reverse seq)))))
    (t (format "No Solution!")))
      (values))
EXPANDWARNSDORFF

CL-USER 12 > 

(defun knights-tour-greedy (x y m n)
  (setf seq nil)
  (initknightsTourstate m n x y)
  (knightsTour-goalstate m n)
  (expandWarnsdorff x y visited))
KNIGHTS-TOUR-GREEDY

CL-USER 13 > 
knights-tour-backtracking 0 0 5 5

((0 . 0)) 
1 
((0 . 0) (2 . 1)) 
2 
((0 . 0) (2 . 1) (1 . 3)) 
3 
((0 . 0) (2 . 1) (1 . 3) (0 . 1)) 
4 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0)) 
5 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2)) 
6 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4)) 
7 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3)) 
8 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1)) 
9 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3)) 
10 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2)) 
11 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4)) 
12 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4) (0 . 2)) 
13 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4) (0 . 2) (1 . 0)) 
14 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4) (0 . 2) (1 . 0) (3 . 1)) 
15 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4) (0 . 2) (1 . 0) (3 . 1) (4 . 3)) 
16 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4) (0 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4)) 
17 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4) (0 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4) (3 . 2)) 
18 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4) (0 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4) (3 . 2) (4 . 4)) 
19 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4) (0 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4) (3 . 2)) 
18 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4) (0 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4) (3 . 2) (4 . 0)) 
19 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4) (0 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4) (3 . 2)) 
18 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4) (0 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4)) 
17 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4) (0 . 2) (1 . 0) (3 . 1) (4 . 3)) 
16 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4) (0 . 2) (1 . 0) (3 . 1)) 
15 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4) (0 . 2) (1 . 0)) 
14 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4) (0 . 2)) 
13 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4)) 
12 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4) (3 . 3)) 
13 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4) (3 . 3) (4 . 1)) 
14 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4) (3 . 3)) 
13 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 4)) 
12 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2)) 
11 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0)) 
12 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0) (0 . 2)) 
13 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0) (0 . 2) (1 . 4)) 
14 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0) (0 . 2) (1 . 4) (3 . 3)) 
15 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0) (0 . 2) (1 . 4) (3 . 3) (4 . 1)) 
16 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0) (0 . 2) (1 . 4) (3 . 3)) 
15 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0) (0 . 2) (1 . 4)) 
14 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0) (0 . 2)) 
13 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0)) 
12 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0) (3 . 1)) 
13 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0) (3 . 1) (4 . 3)) 
14 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4)) 
15 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4) (3 . 2)) 
16 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4) (3 . 2) (4 . 4)) 
17 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4) (3 . 2)) 
16 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4) (3 . 2) (4 . 0)) 
17 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4) (3 . 2)) 
16 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4)) 
15 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0) (3 . 1) (4 . 3)) 
14 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0) (3 . 1)) 
13 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (1 . 0)) 
12 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2)) 
11 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1)) 
12 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1) (3 . 3)) 
13 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1) (3 . 3) (1 . 4)) 
14 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1) (3 . 3) (1 . 4) (0 . 2)) 
15 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1) (3 . 3) (1 . 4) (0 . 2) (1 . 0)) 
16 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1) (3 . 3) (1 . 4) (0 . 2) (1 . 0) (3 . 1)) 
17 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1) (3 . 3) (1 . 4) (0 . 2) (1 . 0) (3 . 1) (4 . 3)) 
18 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1) (3 . 3) (1 . 4) (0 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4)) 
19 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1) (3 . 3) (1 . 4) (0 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4) (3 . 2)) 
20 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1) (3 . 3) (1 . 4) (0 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4) (3 . 2) (4 . 4)) 
21 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1) (3 . 3) (1 . 4) (0 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4) (3 . 2)) 
20 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1) (3 . 3) (1 . 4) (0 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4) (3 . 2) (4 . 0)) 
21 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1) (3 . 3) (1 . 4) (0 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4) (3 . 2)) 
20 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1) (3 . 3) (1 . 4) (0 . 2) (1 . 0) (3 . 1) (4 . 3) (2 . 4)) 
19 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1) (3 . 3) (1 . 4) (0 . 2) (1 . 0) (3 . 1) (4 . 3)) 
18 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1) (3 . 3) (1 . 4) (0 . 2) (1 . 0) (3 . 1)) 
17 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1) (3 . 3) (1 . 4) (0 . 2) (1 . 0)) 
16 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1) (3 . 3) (1 . 4) (0 . 2)) 
15 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1) (3 . 3) (1 . 4)) 
14 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1) (3 . 3)) 
13 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 1)) 
12 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2)) 
11 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3)) 
12 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3) (3 . 1)) 
13 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3) (3 . 1) (1 . 0)) 
14 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3) (3 . 1) (1 . 0) (0 . 2)) 
15 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4)) 
16 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (3 . 3)) 
17 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (3 . 3) (4 . 1)) 
18 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (3 . 3)) 
17 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4)) 
16 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3) (3 . 1) (1 . 0) (0 . 2)) 
15 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3) (3 . 1) (1 . 0)) 
14 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3) (3 . 1)) 
13 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3)) 
12 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3) (2 . 4)) 
13 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3) (2 . 4) (3 . 2)) 
14 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3) (2 . 4) (3 . 2) (4 . 4)) 
15 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3) (2 . 4) (3 . 2)) 
14 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3) (2 . 4) (3 . 2) (4 . 0)) 
15 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3) (2 . 4) (3 . 2)) 
14 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3) (2 . 4)) 
13 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (4 . 3)) 
12 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2)) 
11 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (3 . 4)) 
12 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (3 . 4) (4 . 2)) 
13 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (3 . 4) (4 . 2) (3 . 0)) 
14 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (3 . 4) (4 . 2)) 
13 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (3 . 4)) 
12 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2)) 
11 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (3 . 0)) 
12 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (3 . 0) (4 . 2)) 
13 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (3 . 0) (4 . 2) (3 . 4)) 
14 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (3 . 0) (4 . 2)) 
13 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2) (3 . 0)) 
12 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 2)) 
11 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3)) 
10 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4)) 
11 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3)) 
12 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1)) 
13 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0)) 
14 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2)) 
15 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4)) 
16 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (3 . 3)) 
17 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (3 . 3) (4 . 1)) 
18 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (3 . 3) (4 . 1) (2 . 2)) 
19 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (3 . 3) (4 . 1) (2 . 2) (3 . 4)) 
20 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (3 . 3) (4 . 1) (2 . 2) (3 . 4) (4 . 2)) 
21 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (3 . 3) (4 . 1) (2 . 2) (3 . 4) (4 . 2) (3 . 0)) 
22 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (3 . 3) (4 . 1) (2 . 2) (3 . 4) (4 . 2)) 
21 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (3 . 3) (4 . 1) (2 . 2) (3 . 4)) 
20 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (3 . 3) (4 . 1) (2 . 2)) 
19 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (3 . 3) (4 . 1) (2 . 2) (3 . 0)) 
20 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (3 . 3) (4 . 1) (2 . 2) (3 . 0) (4 . 2)) 
21 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (3 . 3) (4 . 1) (2 . 2) (3 . 0) (4 . 2) (3 . 4)) 
22 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (3 . 3) (4 . 1) (2 . 2) (3 . 0) (4 . 2)) 
21 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (3 . 3) (4 . 1) (2 . 2) (3 . 0)) 
20 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (3 . 3) (4 . 1) (2 . 2)) 
19 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (3 . 3) (4 . 1)) 
18 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (3 . 3)) 
17 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4)) 
16 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (2 . 2)) 
17 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (2 . 2) (4 . 1)) 
18 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (2 . 2) (4 . 1) (3 . 3)) 
19 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (2 . 2) (4 . 1)) 
18 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (2 . 2)) 
17 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (2 . 2) (3 . 4)) 
18 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (2 . 2) (3 . 4) (4 . 2)) 
19 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (2 . 2) (3 . 4) (4 . 2) (3 . 0)) 
20 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (2 . 2) (3 . 4) (4 . 2)) 
19 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (2 . 2) (3 . 4)) 
18 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (2 . 2)) 
17 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (2 . 2) (3 . 0)) 
18 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (2 . 2) (3 . 0) (4 . 2)) 
19 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (2 . 2) (3 . 0) (4 . 2) (3 . 4)) 
20 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (2 . 2) (3 . 0) (4 . 2)) 
19 
((0 . 0) (2 . 1) (1 . 3) (0 . 1) (2 . 0) (1 . 2) (0 . 4) (2 . 3) (1 . 1) (0 . 3) (2 . 4) (4 . 3) (3 . 1) (1 . 0) (0 . 2) (1 . 4) (2 . 2) (3 . 0)) 
18 

Stack overflow (stack size 31744).
  1 (continue) Extend stack by 50%.
  2 (abort) Return to level 0.
  3 Return to top loop level 0.

Type :b for backtrace or :c <option number> to proceed.
Type :bug-form "<subject>" for a bug report template or :? for other options.

CL-USER 14 : 1 > 